--ALTER TABLE kunden DROP CONSTRAINT fk_kunden_amapping;
ALTER TABLE angebote DROP CONSTRAINT fk_angebote_kunden;
ALTER TABLE angebote_mapping DROP CONSTRAINT fk_amapping_angebote;
ALTER TABLE ausgangsrechnungen_mapping DROP CONSTRAINT fk_ausgrmapping_ausgrechnung;
--ALTER TABLE projekte DROP CONSTRAINT fk_projekte_ausgrmapping;
ALTER TABLE projekte DROP CONSTRAINT fk_projekte_angebote;
ALTER TABLE rzeilen_mapping DROP CONSTRAINT fk_rzeilenmapping_rzeile;
ALTER TABLE bzeilen_mapping DROP CONSTRAINT fk_bzeilenmapping_bzeile;
ALTER TABLE ausgangsrechnungen DROP CONSTRAINT fk_ausgr_kunde;
--ALTER TABLE ausgangsrechnungen DROP CONSTRAINT fk_ausgr_rzeilenmapping;
--ALTER TABLE ausgangsrechnungen DROP CONSTRAINT fk_ausgr_bzeilenmapping;
ALTER TABLE eingangsrechnungen DROP CONSTRAINT fk_eingr_kontakt;
--ALTER TABLE eingangsrechnungen DROP CONSTRAINT fk_eingr_rzeilenmapping;
--ALTER TABLE eingangsrechnungen DROP CONSTRAINT fk_eingr_bzeilenmapping;
ALTER TABLE rechnungszeilen DROP CONSTRAINT fk_rzeilen_ausgrechnung;
ALTER TABLE rechnungszeilen DROP CONSTRAINT fk_rzeilen_angebote;
ALTER TABLE kat_mapping DROP CONSTRAINT fk_katmapping_kategorie;
--ALTER TABLE buchungszeilen DROP CONSTRAINT fk_bzeilen_katmapping;
DROP TABLE kontakte;
DROP TABLE kunden;
DROP TABLE angebote;
DROP TABLE angebote_mapping;
DROP TABLE ausgangsrechnungen_mapping;
DROP TABLE projekte;
DROP TABLE rzeilen_mapping;
DROP TABLE bzeilen_mapping;
DROP TABLE ausgangsrechnungen;
DROP TABLE eingangsrechnungen;
DROP TABLE rechnungszeilen;
DROP TABLE kategorien;
DROP TABLE kat_mapping;
DROP TABLE buchungszeilen;
CREATE TABLE kontakte 
	(id INTEGER,
	nachname VARCHAR(50),	
	vorname VARCHAR(50),
	adresse VARCHAR(50),
	email VARCHAR(100),
	telefon varchar(50),
	PRIMARY KEY(id));

CREATE TABLE kunden
	(id INTEGER,
	nachname VARCHAR(50),
	vorname VARCHAR(50),
	unternehmen VARCHAR(50),
	adresse VARCHAR(50),
	email VARCHAR(100),
	telefon VARCHAR(50),
	angebot_mapping_id INTEGER,
	PRIMARY KEY(id));

--ignoriere anforderung das mehrere angebote in ein projekt münden können
CREATE TABLE angebote
	(id INTEGER,
	titel VARCHAR(50) UNIQUE,
	kunde_id INTEGER,
	summe DECIMAL(20,2),
	dauer INTEGER,
	datum DATE,	--startdatum
	chance DECIMAL(20,2),
	PRIMARY KEY(id));

CREATE TABLE angebote_mapping
	(id INTEGER,
	angebot_id INTEGER,
	PRIMARY KEY(id,angebot_id));

CREATE TABLE ausgangsrechnungen_mapping
	(id INTEGER,
	ausgangsrechnung_id INTEGER,
	PRIMARY KEY(id,ausgangsrechnung_id));

CREATE TABLE projekte
	(id INTEGER,
	titel VARCHAR(50) UNIQUE,
	angebot_id INTEGER,
	ausgr_mapping_id INTEGER, --fraglich ob funktioniert weil wert null sein kann
	zeit DECIMAL(20,2),
	PRIMARY KEY(id));

CREATE TABLE rzeilen_mapping
	(id INTEGER,
	rechnungszeile_id INTEGER,
	PRIMARY KEY(id,rechnungszeile_id));

CREATE TABLE bzeilen_mapping
	(id INTEGER,
	buchungszeile_id INTEGER,
	PRIMARY KEY(id,buchungszeile_id));

CREATE TABLE ausgangsrechnungen
	(id INTEGER,
	rechnungskürzel VARCHAR(50),
	kunde_id INTEGER,
	rzeile_mapping_id INTEGER,
	bzeile_mapping_id INTEGER,
	status VARCHAR(50),
	PRIMARY KEY(id));

CREATE TABLE eingangsrechnungen
	(id INTEGER,
	rechnungskürzel VARCHAR(50),
	kontakt_id INTEGER,
	bzeile_mapping_id INTEGER,
	status VARCHAR(50),
	PRIMARY KEY(id));

CREATE TABLE rechnungszeilen
	(id INTEGER,
	ausgangsrechnung_id INTEGER,
	angebot_id INTEGER,
	kommentar VARCHAR(100),
	steuern DECIMAL(20,2),
	betrag DECIMAL(20,2),
	PRIMARY KEY(id));

CREATE TABLE kategorien
	(id INTEGER,
	name VARCHAR(50),
	PRIMARY KEY(id));

CREATE TABLE kat_mapping
	(id INTEGER,
	kategorie_id INTEGER,
	PRIMARY KEY(id,kategorie_id));

--eine buchungszeile kann entweder mit EINER eingangs oder EINER ausgangsrechnung verknüpft werden
--ignoriere anforderung das buchungszeile mit ein oder MEHREREN Ein/AusgRechnungen verknüpft werden KANN (aber nicht muss)
CREATE TABLE buchungszeilen
	(id INTEGER,
	eingangsrechnung_id INTEGER, --no fk because can be null
	ausgangsrechnung_id INTEGER, --no fk because can be null
	betrag DECIMAL(20,2),
	umsatzsteuer DECIMAL(20,2),
	buchungsdatum DATE,
	kat_mapping_id INTEGER,
	PRIMARY KEY(id));
	--not used because sql throws error because angebote_mapping(id) is not unique in mapping table
--ALTER TABLE kunden ADD CONSTRAINT fk_kunden_amapping 
--FOREIGN KEY(angebot_mapping_id) REFERENCES angebote_mapping(id);

ALTER TABLE angebote ADD CONSTRAINT fk_angebote_kunden
FOREIGN KEY(kunde_id) REFERENCES kunden(id);
	
ALTER TABLE angebote_mapping ADD CONSTRAINT fk_amapping_angebote
FOREIGN KEY(angebot_id) REFERENCES angebote(id);
	
ALTER TABLE ausgangsrechnungen_mapping ADD CONSTRAINT fk_ausgrmapping_ausgrechnung
FOREIGN KEY(ausgangsrechnung_id) REFERENCES ausgangsrechnungen(id);
	
--ALTER TABLE projekte ADD CONSTRAINT fk_projekte_ausgrmapping
--FOREIGN KEY(ausgr_mapping_id) REFERENCES ausgangsrechnungen_mapping(id);

ALTER TABLE projekte ADD CONSTRAINT fk_projekte_angebote
FOREIGN KEY(angebot_id) REFERENCES angebote(id);

ALTER TABLE rzeilen_mapping ADD CONSTRAINT fk_rzeilenmapping_rzeile
FOREIGN KEY(rechnungszeile_id) REFERENCES rechnungszeilen(id);

ALTER TABLE bzeilen_mapping ADD CONSTRAINT fk_bzeilenmapping_bzeile
FOREIGN KEY(buchungszeile_id) REFERENCES buchungszeilen(id);

ALTER TABLE ausgangsrechnungen ADD CONSTRAINT fk_ausgr_kunde
FOREIGN KEY(kunde_id) REFERENCES kunden(id);

--ALTER TABLE ausgangsrechnungen ADD CONSTRAINT fk_ausgr_rzeilenmapping	
--FOREIGN KEY(rzeile_mapping_id) REFERENCES rzeilen_mapping(id);

--ALTER TABLE ausgangsrechnungen ADD CONSTRAINT fk_ausgr_bzeilenmapping
--FOREIGN KEY(bzeile_mapping_id) REFERENCES bzeilen_mapping(id);

ALTER TABLE eingangsrechnungen ADD CONSTRAINT fk_eingr_kontakt
FOREIGN KEY(kontakt_id) REFERENCES kontakte(id);

--ALTER TABLE eingangsrechnungen ADD CONSTRAINT fk_eingr_rzeilenmapping
--FOREIGN KEY(rzeile_mapping_id) REFERENCES rzeilen_mapping(id);

--ALTER TABLE eingangsrechnungen ADD CONSTRAINT fk_eingr_bzeilenmapping
--FOREIGN KEY(bzeile_mapping_id) REFERENCES bzeilen_mapping(id);

ALTER TABLE rechnungszeilen ADD CONSTRAINT fk_rzeilen_ausgrechnung
FOREIGN KEY(ausgangsrechnung_id) REFERENCES ausgangsrechnungen(id);

ALTER TABLE rechnungszeilen ADD CONSTRAINT fk_rzeilen_angebote
FOREIGN KEY(angebot_id) REFERENCES angebote(id);
	
ALTER TABLE kat_mapping ADD CONSTRAINT fk_katmapping_kategorie
FOREIGN KEY(kategorie_id) REFERENCES kategorien(id);

--ALTER TABLE buchungszeilen ADD CONSTRAINT fk_bzeilen_katmapping
--FOREIGN KEY(kat_mapping_id) REFERENCES kat_mapping(id);
INSERT INTO kontakte VALUES
	(1,	'Steindl',	'Benjamin',	'Landstr. 33/7',	'b.s80@gmx.at',	'06601231231');
INSERT INTO kontakte VALUES
	(2,	'Schwab',	'Patrick',	'Höchstädtplatz 5',	'if10b047@technikum-wien.at',	'0664000999');
	
INSERT INTO kunden VALUES
	(1,	'Meier',	'Hans',		'Versicherungs GMBH',	'Hausgasse 55/1',	'hans.meier@gmail.com',	'06641234829203',	1);
	
INSERT INTO kunden VALUES
	(2,	'Schwarz',	'Peter',	'Tabak AG',	'Keinergasse 76/1',	'p.schwarz@gmx.at',	'06761023439283',	2);
	
INSERT INTO angebote VALUES
	(1,	'A001-Programm',	1,	20100.00,	180,	to_date('17.04.2012', 'DD.MM.YYYY'),	0.80);
	
INSERT INTO angebote VALUES
	(2,	'A002-Tool',	2,	12000.00,	55,	to_date('04.04.2012', 'DD.MM.YYYY'),	0.67);
	
INSERT INTO angebote VALUES
	(3,	'A003-Meier Prog',	1,	5000.00,	31,	to_date('24.05.2012', 'DD.MM.YYYY'),	0.33);
	
INSERT INTO ausgangsrechnungen VALUES
	(1,	'R012039'	,2,	null,	null,	'bezahlt');
	
INSERT INTO eingangsrechnungen VALUES
	(1, 'R01230'	,1,	null, 'bezahlt');
	
INSERT INTO angebote_mapping VALUES
	(1,	1);
	
INSERT INTO angebote_mapping VALUES
	(1,	3);
	
INSERT INTO angebote_mapping VALUES
	(2,	2);

INSERT INTO ausgangsrechnungen_mapping VALUES 
	(1,1);

INSERT INTO projekte VALUES
	(1,	'Programm-SuperSoftware',	1,	null,	null);

INSERT INTO projekte VALUES
	(2,	'Admin Tool (Java)',	2,	1,	null);
	
INSERT INTO kategorien VALUES
	(1, 'Einnahme');
	
INSERT INTO kategorien VALUES
	(2, 'Ausgabe');
	
INSERT INTO kategorien VALUES
	(3, 'Steuer');

INSERT INTO kat_mapping VALUES
	(1,1);
	
INSERT INTO buchungszeilen VALUES
	(1,	null,	1,	12000.00, null,	to_date('02.12.2012', 'DD.MM.YYYY'),	1);

INSERT INTO buchungszeilen VALUES
	(2,	null,	1,	1000.00, null,	to_date('14.12.2012', 'DD.MM.YYYY'),	1);
	
INSERT INTO buchungszeilen VALUES
	(3,	1,	null,	500.00, null,	to_date('05.05.2012', 'DD.MM.YYYY'),	1);
	
INSERT INTO rechnungszeilen VALUES
	(1,	1,	2,	'Bezahlung für das Projekt',	2400.00,	12000.00);
	
INSERT INTO rechnungszeilen VALUES
	(2,	1,	2,	'Aufschlag für zusätzliche Funktion',	200.00,	1000.00);
	
INSERT INTO rzeilen_mapping VALUES
	(1,	1);
	
INSERT INTO rzeilen_mapping VALUES
	(1,	2);
	
INSERT INTO bzeilen_mapping VALUES
	(1,	1);
	
INSERT INTO bzeilen_mapping VALUES
	(1,	2);
	
INSERT INTO bzeilen_mapping VALUES
	(2,	3);

UPDATE ausgangsrechnungen SET rzeile_mapping_id=1,bzeile_mapping_id=1 WHERE id=1;

UPDATE eingangsrechnungen SET bzeile_mapping_id=2 WHERE id=1;